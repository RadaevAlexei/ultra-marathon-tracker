const fetch = require('node-fetch');
require('dotenv').config();

const TOKEN = process.env.TELEGRAM_BOT_TOKEN;
const WEBHOOK_URL = 'https://ultra-marathon-tracker.netlify.app/.netlify/functions/webhook';

async function setupWebhook() {
  if (!TOKEN) {
    console.error('‚ùå TELEGRAM_BOT_TOKEN –Ω–µ –∑–∞–¥–∞–Ω –≤ .env —Ñ–∞–π–ª–µ');
    process.exit(1);
  }

  try {
    console.log('üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ webhook –¥–ª—è Telegram –±–æ—Ç–∞...');
    console.log(`üì° Webhook URL: ${WEBHOOK_URL}`);
    
    const response = await fetch(`https://api.telegram.org/bot${TOKEN}/setWebhook`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        url: WEBHOOK_URL,
        allowed_updates: ['message', 'callback_query']
      })
    });

    const result = await response.json();
    
    if (result.ok) {
      console.log('‚úÖ Webhook —É—Å–ø–µ—à–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω!');
      console.log(`üìã –û–ø–∏—Å–∞–Ω–∏–µ: ${result.description || '–ù–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è'}`);
    } else {
      console.error('‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ webhook:', result.description);
    }

    // –ü—Ä–æ–≤–µ—Ä–∏–º —Ç–µ–∫—É—â–∏–π webhook
    console.log('\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–µ–≥–æ webhook...');
    const webhookInfo = await fetch(`https://api.telegram.org/bot${TOKEN}/getWebhookInfo`);
    const webhookData = await webhookInfo.json();
    
    if (webhookData.ok) {
      console.log(`üìç URL: ${webhookData.result.url}`);
      console.log(`üìä –û–∂–∏–¥–∞—é—â–∏—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π: ${webhookData.result.pending_update_count}`);
      console.log(`üïê –ü–æ—Å–ª–µ–¥–Ω—è—è –æ—à–∏–±–∫–∞: ${webhookData.result.last_error_date ? new Date(webhookData.result.last_error_date * 1000).toLocaleString() : '–ù–µ—Ç'}`);
    }

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
  }
}

setupWebhook();
