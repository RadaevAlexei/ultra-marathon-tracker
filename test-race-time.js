const fetch = require('node-fetch');

const API_BASE = 'https://ultra-marathon-tracker.netlify.app/.netlify/functions';

async function testRaceTimeFunction() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤—Ä–µ–º–µ–Ω–∏ –∑–∞–±–µ–≥–∞');
  console.log('================================================');

  try {
    // 1. –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è
    console.log('\n1Ô∏è‚É£ –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –∑–∞–±–µ–≥–∞...');
    const getResponse = await fetch(`${API_BASE}/set_race_time`);
    const currentTime = await getResponse.json();
    console.log('‚úÖ –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è:', currentTime);

    // 2. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤–æ–µ –≤—Ä–µ–º—è
    console.log('\n2Ô∏è‚É£ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–æ–≤–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –∑–∞–±–µ–≥–∞...');
    const newTime = {
      race_start: '2025-12-31T18:00:00+03:00',
      race_end: '2026-01-01T18:00:00+03:00'
    };
    
    const setResponse = await fetch(`${API_BASE}/set_race_time`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify(newTime)
    });
    
    const setResult = await setResponse.json();
    console.log('‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç —É—Å—Ç–∞–Ω–æ–≤–∫–∏:', setResult);

    // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Ä–µ–º—è –æ–±–Ω–æ–≤–∏–ª–æ—Å—å
    console.log('\n3Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è...');
    const verifyResponse = await fetch(`${API_BASE}/set_race_time`);
    const updatedTime = await verifyResponse.json();
    console.log('‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ –≤—Ä–µ–º—è:', updatedTime);

    // 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å
    if (updatedTime.race_start === newTime.race_start && updatedTime.race_end === newTime.race_end) {
      console.log('\nüéâ –¢–ï–°–¢ –ü–†–û–ô–î–ï–ù! –§—É–Ω–∫—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.');
    } else {
      console.log('\n‚ùå –¢–ï–°–¢ –ù–ï –ü–†–û–ô–î–ï–ù! –í—Ä–µ–º—è –Ω–µ –æ–±–Ω–æ–≤–∏–ª–æ—Å—å.');
    }

    // 5. –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–∞—Ä—Å–∏–Ω–≥ –¥–∞—Ç—ã (–∫–∞–∫ –≤ –±–æ—Ç–µ)
    console.log('\n4Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–∞—Ä—Å–∏–Ω–≥–∞ –¥–∞—Ç—ã...');
    const testDate = '31.12.2025 18:00';
    const timeRegex = /^(\d{1,2})\.(\d{1,2})\.(\d{4})\s+(\d{1,2}):(\d{2})$/;
    const match = testDate.match(timeRegex);
    
    if (match) {
      const [, day, month, year, hour, minute] = match;
      const parsedDate = new Date(`${year}-${month.padStart(2, '0')}-${day.padStart(2, '0')}T${hour.padStart(2, '0')}:${minute}:00+03:00`);
      console.log('‚úÖ –ü–∞—Ä—Å–∏–Ω–≥ –¥–∞—Ç—ã —Ä–∞–±–æ—Ç–∞–µ—Ç:', parsedDate.toISOString());
    } else {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ –¥–∞—Ç—ã');
    }

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error.message);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testRaceTimeFunction();
